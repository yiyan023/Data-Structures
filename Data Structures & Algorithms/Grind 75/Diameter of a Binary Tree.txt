# Idea 1 Implementation!
    # Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def diameterOfBinaryTree(self, root):
        diameter = 0
        
        def height(node):
            if not node: return 0

            left = height(node.left)
            right = height(node.right)
            
            nonlocal diameter
            diameter = max(diameter, left + right) #diameter accounts for PATH, not height
            #so return height of left and right children instead
            #compare it to the max diameter   
            
            return max(left, right) + 1 #for the height function

        height(root)
        return diameter